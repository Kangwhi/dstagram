"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import dj_database_url
import sys

sys.modules["django.utils.six.moves.urllib.parse"] = __import__(
    "six.moves.urllib_parse", fromlist=["urlencode"]
)
sys.modules["django.utils.six.moves.urllib.request"] = __import__(
    "six.moves.urllib_request", fromlist=["urlopen"]
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-y2^$m23@t7(uny!6hz2djws^7sc5mdr5s^p*)uyu=lkusi7k#p"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1", "localhost", ".herokuapp.com"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "photo",
    "accounts",
    "disqus",
    "django.contrib.sites",
    # "debug_toolbar",  # NOTE: django-debug-toolbar
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # "debug_toolbar.middleware.DebugToolbarMiddleware",  # NOTE: django-debug-toolbar
]
# NOTE: django-debug-toolbar
INTERNAL_IPS = ["127.0.0.1"]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

DATABASES["default"].update(dj_database_url.config(conn_max_age=500))

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/


# Default primary key field type
# https://docsw.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# reverse_lazy 함수를 사용해서 다른 뷰를 적용할 수 있다.
LOGIN_REDIRECT_URL = "/"

# DISQUS 세팅
DISQUS_WEBSITE_SHORTNAME = "hwistagram"
SITE_ID = 1

# AWS 세팅 (static)
from .secret_keys import *

AWS_ACCESS_KEY_ID = MY_AWS_ACCESS_KEY_ID  # Key 아이디
AWS_SECRET_ACCESS_KEY = MY_AWS_SECRET_ACCESS_KEY  # Key 시크릿
AWS_REGION = "ap-northeast-2"  # AWS 지역
AWS_STORAGE_BUCKET_NAME = "dstagram-django3-whi"  # 버킷 이름
AWS_S3_CUSTOM_DOMAIN = "%s.s3.%s.amazonaws.com" % (
    AWS_STORAGE_BUCKET_NAME,
    AWS_REGION,
)  # static files, images files 접근 주소

AWS_S3_FILE_OVERWRITE = False  # 파일 덮어쓰기 방지 기능
AWS_S3_OBJECT_PARAMETERS = {"CacheControl": "max-age=86400"}  # 파일 다운할 때 캐시 유효기간
AWS_DEFAULT_ACL = "public-read"  # S3 파일 잘 가져갈 수 있게 함
AWS_LOCATION = "static"  # 버킷안에 어느 폴더에 업로드 할건지?

STATIC_URL = "http://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
STATICFILES_STORAGE = (
    "storages.backends.s3boto3.S3Boto3Storage"  # static 파일 저장 시 어떤 기법을 사용할 지?
)

# AWS 세팅 (media)
DEFAULT_FILE_STORAGE = "config.s3media.MediaStorage"

MEDIA_URL = "/media/"
MEDIA_ROOT = "/media"
